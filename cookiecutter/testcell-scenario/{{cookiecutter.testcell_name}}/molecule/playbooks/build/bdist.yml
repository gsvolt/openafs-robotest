{% raw -%}
---
- name: Build
  hosts: afs_builders
  vars:
    repo: "{{ afs_git_repo | d('git://git.openafs.org/openafs.git', true) }}"
    version: "{{ afs_git_version | d('master', true) }}"
    build_directory: "{{ afs_build_directory | d('~/openafs', true) }}"
  collections:
    - openafs_contrib.openafs
  tasks:
    - include_role:
        name: openafs_devel

    - debug:
        msg: "Checking out '{{ version }}' from repo '{{ repo }}'."

    - name: "Checkout OpenAFS source code."
      git:
        repo: "{{ repo }}"
        version: "{{ version }}"
        dest: "{{ build_directory }}"

    - debug:
        msg: "Build logs will be created in '{{ inventory_hostname }}:{{ build_directory }}/.ansible/'."

    - name: "Building OpenAFS binaries."
      openafs_build:
        clean: yes
        target: "{{ afs_build_target | d('dest', True) }}"
        projectdir: "{{ build_directory }}"
        destdir: "{{ build_directory }}/packages/dest"
        configure_options: "{{ afs_configure_options }}"
      register: build_results

    - name: "Create install archive."
      vars:
        build_type: bdist
        build_platform: "{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}-{{ ansible_architecture }}"
      archive:
        path: "{{ build_results.destdir }}/"
        dest: "openafs-{{ build_platform }}.bdist.tar.gz"
        format: gz
      register: archive_results

    - name: "Download install archive."
      fetch:
        src: "{{ archive_results.dest }}"
        dest: "{{ afs_install_archive }}"
        flat: yes
      register: fetch_results

    - name: "Downloaded file."
      debug:
        var: fetch_results.dest
{%- endraw %}
